// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Udemy_Project_1.Data;

#nullable disable

namespace Udemy_Project_1.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Udemy_Project_1.Models.LocalUser", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("LocalUsers");
                });

            modelBuilder.Entity("Udemy_Project_1.Models.Villa", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Amenity")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Details")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Rate")
                        .HasColumnType("float");

                    b.Property<DateTime>("UpdatedTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("imgUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("occupancy")
                        .HasColumnType("int");

                    b.Property<int>("sqft")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Villa");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Amenity = "",
                            CreatedTime = new DateTime(2023, 7, 9, 8, 29, 32, 726, DateTimeKind.Local).AddTicks(8630),
                            Details = "ahbsdjcnnnnnnnnnnm jxnsjncd xjnjx",
                            Name = "Royal Villa",
                            Rate = 100.0,
                            UpdatedTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            imgUrl = "httss jnc",
                            occupancy = 4,
                            sqft = 100
                        },
                        new
                        {
                            Id = 2,
                            Amenity = "",
                            CreatedTime = new DateTime(2023, 7, 9, 8, 29, 32, 726, DateTimeKind.Local).AddTicks(8644),
                            Details = "ahbsdjcnnnnnnnnnnm jxnsjncd xjnjx",
                            Name = "Royal Villa2",
                            Rate = 100.0,
                            UpdatedTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            imgUrl = "httss jnc",
                            occupancy = 4,
                            sqft = 100
                        },
                        new
                        {
                            Id = 3,
                            Amenity = "",
                            CreatedTime = new DateTime(2023, 7, 9, 8, 29, 32, 726, DateTimeKind.Local).AddTicks(8646),
                            Details = "ahbsdjcnnnnnnnnnnm jxnsjncd xjnjx",
                            Name = "Royal Villa3",
                            Rate = 100.0,
                            UpdatedTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            imgUrl = "httss jnc",
                            occupancy = 4,
                            sqft = 100
                        },
                        new
                        {
                            Id = 4,
                            Amenity = "",
                            CreatedTime = new DateTime(2023, 7, 9, 8, 29, 32, 726, DateTimeKind.Local).AddTicks(8648),
                            Details = "ahbsdjcnnnnnnnnnnm jxnsjncd xjnjx",
                            Name = "Royal Villa4",
                            Rate = 100.0,
                            UpdatedTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            imgUrl = "httss jnc",
                            occupancy = 4,
                            sqft = 100
                        },
                        new
                        {
                            Id = 5,
                            Amenity = "",
                            CreatedTime = new DateTime(2023, 7, 9, 8, 29, 32, 726, DateTimeKind.Local).AddTicks(8649),
                            Details = "ahbsdjcnnnnnnnnnnm jxnsjncd xjnjx",
                            Name = "Royal Villa5",
                            Rate = 100.0,
                            UpdatedTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            imgUrl = "httss jnc",
                            occupancy = 4,
                            sqft = 100
                        });
                });

            modelBuilder.Entity("Udemy_Project_1.Models.VillaNumber", b =>
                {
                    b.Property<int>("VillaNo")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("SpclDetails")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("VillaId")
                        .HasColumnType("int");

                    b.HasKey("VillaNo");

                    b.HasIndex("VillaId");

                    b.ToTable("VillaNumber");
                });

            modelBuilder.Entity("Udemy_Project_1.Models.VillaNumber", b =>
                {
                    b.HasOne("Udemy_Project_1.Models.Villa", "Villa")
                        .WithMany()
                        .HasForeignKey("VillaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Villa");
                });
#pragma warning restore 612, 618
        }
    }
}
